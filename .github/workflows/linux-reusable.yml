on:
  workflow_call:
    inputs:
      shell:
        required: false
        default: bash
        type: string
      package-name:
        required: true
        type: string
      package-sdk:
        default: false
        required: false
        type: boolean
      requires-sdk:
        default: false
        required: false
        type: boolean
      sdk-config:
        required: false
        type: string
      aws-region:
        default: us-east-1
        required: false
        type: string
      os:
        default: Linux
        required: false
        type: string
      arch:
        default: X64
        required: false
        type: string
      runTests:
        description: "Run tests?"
        required: false
        type: boolean
        default: false
      aws-subnet-id:
        required: false
        default: subnet-064f21b53fc72cf44
        type: string
      aws-sg-id:
        required: false
        default: sg-0ca7912782cf1538b
        type: string
      aws-ami-id:
        required: false
        default: ami-0b0e38d12eb5ff011
        type: string
      aws-instance-type:
        required: false
        default: c5a.8xlarge
        type: string
      aws-availability-zone:
        required: false
        default: us-east-1b
        type: string
      key-pair:
        required: false
        default: win
        type: string

jobs:
  start-runner:
    name: Start self-hosted EC2 runner
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.aws-region }}
      - name: Start EC2 runner
        id: start-ec2-runner
        uses: tundranerd/ec2-multiple-github-runners@multi-os-multi-runner
        with:
          mode: start
          key-pair: ${{ inputs.key-pair }}
          os: ${{ inputs.os }}
          github-token: ${{ secrets.GH_TOKEN}}
          ec2-image-id: ${{ inputs.aws-ami-id}}
          ec2-instance-type: ${{ inputs.aws-instance-type }}
          subnet-id: ${{ inputs.aws-subnet-id }}
          security-group-id: ${{ inputs.aws-sg-id }}
          availability-zone: ${{ inputs.aws-availability-zone }}
          wait-for-registry-timeout: 5
          aws-resource-tags: > # optional, requires additional permissions
            [
              {"Key": "Name", "Value": "ec2-github-runner"},
              {"Key": "GitHubRepository", "Value": "${{ github.repository }}"},
              {"Key": "os", "Value": "${{ inputs.os }}"}
            ]
  build:
    name: Clone and build
    needs:
      - start-runner # required to get output from the start-runner job
    runs-on: ${{ needs.start-runner.outputs.label }} # run the job on the newly created runner
    outputs:
      git_describe: ${{ steps.git-describe.outputs.git_describe }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - id: git-describe
        name: Git Describe
        uses: febiosoftware/febio-workflows/.github/actions/git-describe@reusable-worfklow-linux
        with:
          shell: ${{ inputs.shell }}
      - name: Build
        run: |
          ci/${{ inputs.os }}/build.sh
      - name: Create SDK
        run: |
          ci/${{ inputs.os }}/create-febio-sdk.sh
      - name: Upload SDK
        uses: actions/upload-artifact@v3
        with:
          name: febio4-sdk-${{runner.os}}-${{runner.arch}}
          path: |
            febio4-sdk
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: febio4-${{inputs.os}}-${{inputs.arch}}
          path: |
            cmbuild/bin
            cmbuild/lib
            !cmbuild/lib/*.a
  tests:
    if: ${{inputs.runTests}}
    name: Run test suite
    needs:
      - start-runner # required to get output from the start-runner job
      - build
    runs-on: ${{ needs.start-runner.outputs.label }} # run the job on the newly created runner
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: 'true'
      - uses: actions/download-artifact@v3
        with:
          name: febio4-${{runner.os}}-${{runner.arch}}
          path: |
            cmbuild
      - name: Run test suite
        run: |
          ci/${{ inputs.os }}/test.sh
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: testsuite-${{runner.os}}-${{runner.arch}}-logs
          path: |
            TestSuite/Verify3/*.log
            TestSuite/Logs*.txt
  stop-runner:
    name: Stop self-hosted EC2 runner
    needs:
      - start-runner # required to get output from the start-runner job
      - tests # required to wait when the main job is done
    runs-on: ubuntu-latest
    if: ${{ always() }} # required to stop the runner even if the error happened in the previous jobs
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.aws-region }}
      - name: Stop EC2 runner
        uses: tundranerd/ec2-multiple-github-runners@multi-os-multi-runner
        with:
          mode: stop
          os: ${{ inputs.os }}
          wait-for-deregistry-timeout: 5
          github-token: ${{ secrets.GH_TOKEN}}
          label: ${{ needs.start-runner.outputs.label }}
          ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}
  repo-artifacts:
    name: Upload artifacts to repo
    needs:
      - build # required to get output from the start-runner job
    runs-on: ubuntu-latest
    if: ${{ always() }} # required to stop the runner even if the error happened in the previous jobs
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: 'true'
      - uses: actions/download-artifact@v3
        with:
          name: febio4-${{runner.os}}-${{runner.arch}}
          path: |
            cmbuild
      - name: Configure SSH
        run: |
          ci/common/linux/configure-ssh.sh
        env:
          SSH_USER: ${{ secrets.REPO_USER }}
          SSH_KEY: ${{ secrets.REPO_KEY }}
          SSH_HOST: ${{ secrets.REPO_HOST }}
      - name: Stage Build to Repo
        run: |
          ci/${{ inputs.os }}/scp-to-repo.sh
      - name: Make Dev Release
        run: |
          ssh repo "python3 update2/FEBioStudio2Dev/makeDevRelease.py -l"
  publish-to-s3:
    name: Publish to S3
    needs:
      - build
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: 'true'
      - name: Download SDK
        uses: actions/download-artifact@v3
        with:
          name: febio4-sdk-${{runner.os}}-${{runner.arch}}
          path: |
            artifacts/febio4-sdk
      - name: Download febio
        uses: actions/download-artifact@v3
        with:
          name: febio4-${{runner.os}}-${{runner.arch}}
          path: |
            artifacts/febio
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.aws-region }}
      - name: Publish to S3
        env:
          BUCKET_NAME: febio-packages
          OS: ${{ inputs.os }}
          REF_NAME: ${{ github.ref_name}}
          PACKAGE_NAME: febio
          GIT_TAG: ${{ needs.build.outputs.git_describe }}
        run: |
          ci/${{ inputs.os }}/publish-to-s3.sh
  docker:
    name: Build and deploy docker with latest
    needs:
      - build # required to get output from the start-runner job
    runs-on: ubuntu-latest
    if: ${{inputs.buildDocker}}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: febio4-${{runner.os}}-${{runner.arch}}
          path: |
            cmbuild
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: febio-runtime
          IMAGE_TAG: ${{ needs.build.outputs.git_describe }}
        run: |
          ci/${{ inputs.os }}/publish-docker-images.sh
